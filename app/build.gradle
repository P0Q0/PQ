plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs'
}

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdkVersion versions.compileSdk
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    defaultConfig {
        applicationId "pkg.what.pq"
        minSdk versions.minSdk
        targetSdk versions.targetSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            //debuggable true //turn this off when not using a_9 as it will cause slower builds
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "GOOGLE_SERVICES_API_CLIENT_ID", localProperties['GOOGLE_SERVICES_API_CLIENT_ID']
            buildConfigField "String", "GOOGLE_SERVICES_API_CLIENT_SECRET", localProperties['GOOGLE_SERVICES_API_CLIENT_SECRET']
        }
        release {
            crunchPngs false
            minifyEnabled false
            shrinkResources false
            buildConfigField "String", "GOOGLE_SERVICES_API_CLIENT_ID", localProperties['GOOGLE_SERVICES_API_CLIENT_ID']
            buildConfigField "String", "GOOGLE_SERVICES_API_CLIENT_SECRET", localProperties['GOOGLE_SERVICES_API_CLIENT_SECRET']
        }
    }
    viewBinding {
        enabled = true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/*.kotlin_module'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                minHeapSize = "128m"
                maxHeapSize = "1024m"
            }
        }
    }
    dynamicFeatures = [':a_0', ':a_1', ':a_2', ':a_3', ':a_4', ':a_5', ':a_6', ':a_7', ':a_8', ':a_9']
}

dependencies {
    api "androidx.appcompat:appcompat:${versions.appcompat}"
    api "androidx.core:core-ktx:${versions.ktxCore}"
    api "com.google.android.play:core-ktx:${versions.playcore}"
    api "com.google.android.material:material:${versions.material}"
    api "androidx.constraintlayout:constraintlayout:${versions.constraint}"
    api "androidx.recyclerview:recyclerview:${versions.recyclerview}"
    api "com.google.android.gms:play-services-auth:${versions.playauth}"
    api "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutinescore}"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesandroid"
    api "com.google.code.gson:gson:${versions.gson}"
    api "com.squareup.picasso:picasso:${versions.picasso}"
    api "androidx.fragment:fragment-ktx:${versions.fragment}"
    api "androidx.navigation:navigation-fragment-ktx:${versions.navfragment}"
    api "androidx.navigation:navigation-ui-ktx:${versions.navigation}"
    api "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    api "com.squareup.retrofit2:converter-gson:${versions.gsonCvr}"
    api "com.squareup.retrofit2:converter-moshi:${versions.moshiCvr}"
    api "com.squareup.moshi:moshi-kotlin:1.13.0"
    api "com.squareup.moshi:moshi:${versions.moshi}"
    api "androidx.work:work-runtime-ktx:${versions.workKtx}"
    androidTestImplementation("androidx.work:work-testing:${versions.workTest}")
    api "com.squareup.leakcanary:leakcanary-android:${versions.leakCanary}"

    //noinspection LifecycleAnnotationProcessorWithJava8 // @note do not remove that <- it's a suppression
    api(annotationProcessor("androidx.lifecycle:lifecycle-compiler:${versions.lcCompiler}"))
    api "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycle}"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lcVm}"
    api "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lcLd}"
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:${versions.lcVmStates}"
    api "androidx.lifecycle:lifecycle-service:${versions.lcService}"
    api "androidx.lifecycle:lifecycle-process:${versions.lcProcess}"
    api "androidx.lifecycle:lifecycle-reactivestreams-ktx:${versions.lcRcStreams}"
    testImplementation "androidx.arch.core:core-testing:${versions.lcLdTester}"

    testImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "androidx.test.ext:junit:${versions.junitExt}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.junitEspresso}"
}