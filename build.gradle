
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"
        classpath("androidx.navigation:navigation-safe-args-gradle-plugin:2.4.1")
    }
}

plugins {
    id 'com.android.application' version '7.1.2' apply false
    id 'com.android.library' version '7.1.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.6.10' apply false
    id 'com.android.dynamic-feature' version '7.1.2' apply false
}

def lifecycle = '2.5.0-alpha04'
ext.versions = [
    'compileSdk'        : 31,
    'minSdk'            : 30,
    'targetSdk'         : 31,
    'annotation'        : '1.3.0',
    'appcompat'         : '1.4.1',
    'constraint'        : '2.1.3',
    'coroutinesandroid' : '1.6.0-native-mt',
    'coroutinescore'    : '1.6.0-native-mt',
    'gson'              : '2.9.0',
    'gsonCvr'           : '2.9.0',
    'fragment'          : '1.4.1',
    'material'          : '1.5.0',
    'junit'             : '4.13.2',
    'junitExt'          : '1.1.3',
    'junitEspresso'     : '3.4.0',
    'kotlin'            : '1.6.10',
    'ktxCore'           : '1.7.0',
    'lifecycle'         : lifecycle,
    'lcCompiler'        : lifecycle,
    'lcLd'              : lifecycle,
    'lcLdTester'        : '2.1.0',
    'lcProcess'         : lifecycle,
    'lcRcStreams'       : lifecycle,
    'lcService'         : lifecycle,
    'lcVm'              : lifecycle,
    'lcVmStates'        : lifecycle,
    'moshiCvr'          : '2.9.0',
    'moshiKtx'          : '1.12.0',
    'moshi'             : '1.13.0',
    'navigation'        : '2.4.1',
    'navfragment'       : '2.4.1',
    'okhttp'            : '5.0.0-alpha.5',
    'picasso'           : '2.71828',
    'playcore'          : '1.8.1',
    'playauth'          : '20.1.0',
    'recyclerview'      : '1.2.1',
    'retrofit'          : '2.9.0',
    'safeargs'          : '2.4.1',
    'workKtx'           : '2.7.1',
    'workTest'          : '2.7.1'
]

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}